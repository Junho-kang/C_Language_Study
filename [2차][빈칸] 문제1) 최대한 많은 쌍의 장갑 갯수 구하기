#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

const int max_product_number = 10;
int* func_a(int gloves[], int gloves_len) {
    int* counter = (int*)malloc(sizeof(int) * (max_product_number + 1));
    for (int i = 0; i <= max_product_number; ++i)   //for문 1) 0 ~ max_product_number까지 : gloves의 원소는 1~10 이하의 자연수의 조건, 10까지 돌린다.
        counter[i] = 0;                             // 동적 할당된 배열의 값을 초기화해주는 for문이다.

    for (int i = 0; i < gloves_len; ++i)            //for문 2) 0 ~ gloves_len - 1 까지 반복하고, counter[gloves[i]] 방을 1 더한다.
        counter[i]++;

    return counter;
}
int mini(int a, int b) {
    return a < b ? a : b;
}

int solution(int left_gloves[], int left_gloves_len, int right_gloves[], int right_gloves_len) {
    int* left_counter = func_a(left_gloves, left_gloves_len);
    int* right_counter = func_a(right_gloves, right_gloves_len);
    int total = 0;
    for (int i = 1; i <= max_product_number; ++i)
        total += mini(left_counter[i], right_counter[i]);
    return total;
}

int main() {
    int left_gloves[5] = { 2, 1, 2, 2, 4 };
    int left_gloves_len = 5;
    int right_gloves[6] = { 1, 2, 2, 4, 4, 7 };
    int right_gloves_len = 6;
    int ret = solution(left_gloves, left_gloves_len, right_gloves, right_gloves_len);

    printf("The return value of solution function is %d \n", ret);
}
